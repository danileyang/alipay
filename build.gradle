buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.6"
        classpath "org.grails.plugins:hibernate5:6.0.6"
        classpath "org.grails.plugins:views-gradle:1.1.3"
    }
}

version "0.1"
group "ddalipay"

apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "war"
apply plugin: "org.grails.grails-web"
apply plugin: "org.grails.plugins.views-json"
apply plugin: "org.grails.grails-gsp"
apply plugin: "asset-pipeline"


repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Camden.SR5'
        mavenBom 'org.springframework.data:spring-data-releasetrain:Hopper-SR7'
    }
    applyMavenExclusions false
}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
}

configurations {
    all*.exclude module: 'slf4j-nop'
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-logging")
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-dependencies"
    compile "org.grails:grails-web-boot"
    compile "org.springframework.boot:spring-boot-configuration-processor"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.2.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.2.Final"
    console "org.grails:grails-console"
    runtime 'org.grails.plugins:grails-console:2.0.8'
    profile "org.grails.profiles:web"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.6"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails.plugins:geb"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"

    compile 'org.codehaus.groovy:groovy-all:2.4.9'

    //simon
    compile "org.javasimon:javasimon-core:4.1.0"
    compile "org.javasimon:javasimon-jdbc41:4.1.0"
    compile "org.javasimon:javasimon-javaee:4.1.0"
    compile "org.javasimon:javasimon-spring:4.1.0"
    compile "org.javasimon:javasimon-console-embed:4.1.0"

    // guava
    compile group: 'com.google.guava', name: 'guava', version: '21.0'

    //httpclient
    compile "commons-httpclient:commons-httpclient:3.1"

    // fastjson
    compile 'com.alibaba:fastjson:1.2.23'

    compile group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.9'

    compile files('libs/alipay-sdk-java20161110125501.jar')
    compile files('libs/commons-logging-1.1.1.jar')

    compile "org.grails.plugins:views-json:1.1.3"

    compile "org.springframework.cloud:spring-cloud-starter"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
    compile "org.springframework.cloud:spring-cloud-starter-hystrix"
    compile "org.springframework.cloud:spring-cloud-starter-feign"

    compile 'org.springframework.data:spring-data-redis'

}

war {
    baseName = 'ddalipay'
    version = '0.1'
    rootSpec.exclude("**/tomcat-*.jar")
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}


assets {
    minifyJs = true
    minifyCss = true
}

task clearJar(type: Delete) {
    delete 'libs/ddalipsy.jar'
}

task makeJar(type:org.gradle.api.tasks.bundling.Jar) {
    //指定生成的jar名
    baseName 'ddalipay'
    //从哪里打包class文件
    from('build/classes/main/ddalipay/')
    //打包到jar后的目录结构
    into('build/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'AlipayPayController.class')
    //去掉R$开头的文件
    exclude{ it.name.startsWith('R$');}
}

makeJar.dependsOn(clearJar, build)

